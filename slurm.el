;;; slurm.el --- Interaction with the SLURM job scheduling system

;; Copyright (C) 2012 François Févotte

;; This file is NOT part of Emacs.

;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.


;;; Commentary:

;; This package provides utilities to work with the SLURM job scheduling system:
;;
;; - "slurm-script-mode.el": a minor mode providing syntax highligting for SBATCH directives in job
;;     submission scripts
;;
;; - "slurm-mode.el": a major mode allowing interaction with the job scheduler


;; WARNING: Part of this file was automatically generated by `update-file-autoloads'.
;;
;; After modifying "slurm-mode.el" and "slurm-script-mode.el", you should update this file by
;; evaluating the following expression:
;;   (load (concat (file-name-directory (buffer-file-name)) "make.el"))


;; If you make improvements to this code or have suggestions, please do not hesitate to fork the
;; repository or submit bug reports on github. The repository is at:
;;
;;     https://github.com/ffevotte/slurm.el

;;; Code:

;; The following part was hand-written

(add-hook 'sh-mode-hook 'turn-on-slurm-script-mode)


;; The following part was automatically generated by `update-file-autoloads'
;; ###BEGINNING OF THE GENERATED PART

;;;### (autoloads (slurm slurm-filter-user-at-start slurm-display-help
;;;;;;  slurm) "slurm-mode" "slurm-mode.el" (20577 30886))
;;; Generated autoloads from slurm-mode.el

(let ((loads (get 'slurm 'custom-loads))) (if (member '"slurm-mode" loads) nil (put 'slurm 'custom-loads (cons '"slurm-mode" loads))))

(defvar slurm-display-help t "\
If non-nil, slurm-mode should display an help message at the top of the screen.")

(custom-autoload 'slurm-display-help "slurm-mode" t)

(defvar slurm-filter-user-at-start t "\
If non-nil, the jobs list is filtered by user at start.")

(custom-autoload 'slurm-filter-user-at-start "slurm-mode" t)

(autoload 'slurm "slurm-mode" "\
Open a slurm-mode buffer to manage jobs.

\(fn)" t nil)

;;;***

;;;### (autoloads (turn-on-slurm-script-mode slurm-script-mode slurm-script-directives-face)
;;;;;;  "slurm-script-mode" "slurm-script-mode.el" (20577 30947))
;;; Generated autoloads from slurm-script-mode.el

(defvar slurm-script-directives-face 'slurm-script-directives "\
Face name to use for SBATCH directives in SLURM job submission scripts.")

(custom-autoload 'slurm-script-directives-face "slurm-script-mode" t)

(defface slurm-script-directives nil "\
Face to use for SBATCH directives in SLURM job submission scripts." :group (quote slurm))

(autoload 'slurm-script-mode "slurm-script-mode" "\
Edit SLURM job submission scripts.

When slurm-script-mode is on, SBATCH directives are highlighted.
This mode also provides a command to insert new SBATCH directives :
  \\<slurm-script-mode-map>
  \\[slurm-script-insert-directive] - `slurm-script-insert-directive'

\(fn &optional ARG)" t nil)

(autoload 'turn-on-slurm-script-mode "slurm-script-mode" "\
Turn slurm-mode on if SBATCH directives are found in the script.

\(fn)" t nil)

;;;***

;;;###END OF THE GENERATED PART

(provide 'slurm)
;; Local Variables:
;; no-byte-compile: t
;; no-update-autoloads: t
;; coding: utf-8
;; End:
;;; slurm.el ends here
